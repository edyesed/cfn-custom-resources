---
AWSTemplateFormatVersion: '2010-09-09'
Description: Password Checker CFT Example
Parameters:
  Password:
    Default: changethispassword
    NoEcho: 'true'
    Description: what ever password you need
    Type: String
    MinLength: '1'
    MaxLength: '41'
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: must contain only alphanumeric characters.
  ConfirmPassword:
    Default: changethispassword
    NoEcho: 'true'
    Description: a confirmation of whatever password
    Type: String
    MinLength: '1'
    MaxLength: '41'
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: must contain only alphanumeric characters.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Testing the Password Confirmation Lambda
      Parameters:
      - Password
      - ConfirmPassword
Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: lambdalogtocloudwatch
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
  CheckPasswordsFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          import json
          import cfnresponse
          def handler(event, context):
              print("Event is")
              print(json.dumps(event))
              print("Context is")
              print(context)
              responseData = {}
              responseData['Data'] = 5
              responseData['passwordcheck'] = 'Password Valid!'
              cfnresponse.send(event, context, cfnresponse.SUCCESS, responseData, "CustomResourcePhysicalID")
      Handler: index.handler
      Runtime: python3.6
      Timeout: '30'
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
  TestPasswords:
    Type: Custom::LambdaCallout
    Properties:
      ServiceToken:
        Fn::GetAtt:
        - CheckPasswordsFunction
        - Arn
      Password:
        Ref: Password
      ConfirmPassword:
        Ref: ConfirmPassword
Outputs:
  Results:
    Description: Test Passwords Result
    Value:
      Fn::GetAtt:
      - TestPasswords
      - passwordcheck
